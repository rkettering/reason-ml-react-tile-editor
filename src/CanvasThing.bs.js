// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

var component = ReasonReact.reducerComponent("CanvasThing");

function setCanvasRef(theRef, param) {
  param[/* state */1][/* canvasRef */0][0] = (theRef == null) ? undefined : Js_primitive.some(theRef);
  return /* () */0;
}

function get_mouse_pos_for_action($$event, ref) {
  console.log($$event);
  var bgRectSrc = ref.getBoundingClientRect();
  console.log(bgRectSrc);
  return /* () */0;
}

function make() {
  var handleClick = function ($$event, self) {
    var match = self[/* state */1][/* canvasRef */0][0];
    if (match !== undefined) {
      var r = Js_primitive.valFromOption(match);
      get_mouse_pos_for_action($$event, r);
      r.getContext("2d").fillRect(0.0, 0.0, 100.0, 100.0);
      return /* () */0;
    } else {
      return /* () */0;
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          onClick: Curry._1(self[/* handle */0], handleClick)
                        }, React.createElement("canvas", {
                              ref: Curry._1(self[/* handle */0], setCanvasRef),
                              height: "100",
                              width: "100"
                            }));
            }),
          /* initialState */(function () {
              return /* record */[/* canvasRef : record */[/* contents */undefined]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.setCanvasRef = setCanvasRef;
exports.get_mouse_pos_for_action = get_mouse_pos_for_action;
exports.make = make;
/* component Not a pure module */
